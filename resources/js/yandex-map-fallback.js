// –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï –î–õ–Ø –Ø–ù–î–ï–ö–° –ö–ê–†–¢
class YandexMapUniversal {
    constructor(containerId, options = {}) {
        this.containerId = containerId;
        this.options = options;
        this.map = null;
        this.attempts = 0;
        this.maxAttempts = 10;

        this.init();
    }

    init() {
        if (this.attempts >= this.maxAttempts) {
            console.error('‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã');
            this.showFallback();
            return;
        }

        this.attempts++;
        console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ #${this.attempts}`);

        // –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if (document.readyState !== 'complete') {
            setTimeout(() => this.init(), 100);
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const container = document.getElementById(this.containerId);
        if (!container) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω');
            setTimeout(() => this.init(), 200);
            return;
        }

        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
        this.forceContainerStyles(container);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç—ã
        if (typeof ymaps === 'undefined') {
            console.log('‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç...');
            setTimeout(() => this.init(), 200);
            return;
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
        this.initializeMap();
    }

    forceContainerStyles(container) {
        // –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –°–¢–ò–õ–ò –î–õ–Ø –ö–û–ù–¢–ï–ô–ù–ï–†–ê
        container.style.cssText = `
            width: 100% !important;
            height: 400px !important;
            min-height: 400px !important;
            position: relative !important;
            display: block !important;
            visibility: visible !important;
            opacity: 1 !important;
            z-index: 1 !important;
            background: #e9ecef !important;
        `;

        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        let parent = container.parentElement;
        while (parent && parent !== document.body) {
            parent.style.overflow = 'visible';
            parent.style.position = 'relative';
            parent = parent.parentElement;
        }
    }

    initializeMap() {
        try {
            console.log('üéØ –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É...');

            ymaps.ready(() => {
                if (this.map) return;

                const container = document.getElementById(this.containerId);

                // –Ø–î–ï–†–ù–´–ô –§–ò–ö–°: –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                const oldContainer = container;
                const newContainer = document.createElement('div');
                newContainer.id = this.containerId;
                newContainer.style.cssText = oldContainer.style.cssText;
                oldContainer.parentNode.replaceChild(newContainer, oldContainer);

                // –°–û–ó–î–ê–ï–ú –ö–ê–†–¢–£
                this.map = new ymaps.Map(this.containerId, {
                    center: this.options.center || [55.863631, 37.652714],
                    zoom: this.options.zoom || 16,
                    controls: this.options.controls || [
                        'zoomControl',
                        'fullscreenControl',
                        'typeSelector',
                        'searchControl'
                    ]
                }, {
                    suppressMapOpenBlock: true,
                    yandexMapDisablePoiInteractivity: false
                });

                // –°–û–ó–î–ê–ï–ú –ú–ï–¢–ö–£
                if (this.options.placemark) {
                    const placemark = new ymaps.Placemark(
                        this.options.placemark.center || this.options.center || [55.863631, 37.652714],
                        this.options.placemark.properties || {
                            hintContent: '–§–µ–¥–µ—Ä–∞–ª—å–Ω–∞—è –ê—Ä–µ–Ω–¥–Ω–∞—è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞',
                            balloonContentHeader: '–§–µ–¥–µ—Ä–∞–ª—å–Ω–∞—è –ê—Ä–µ–Ω–¥–Ω–∞—è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞',
                            balloonContentBody: this.options.placemark.content || `
                                <div style="max-width: 250px;">
                                    <p style="margin: 8px 0; font-size: 14px;">
                                        <strong>–ê–¥—Ä–µ—Å:</strong><br>
                                        ${this.options.address || '—É–ª. –ò—Å–∫—Ä—ã, 31, –ú–æ—Å–∫–≤–∞'}
                                    </p>
                                    <p style="margin: 8px 0; font-size: 14px;">
                                        <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong><br>
                                        ${this.options.phone || '+7 (929) 533-32-06'}
                                    </p>
                                </div>
                            `
                        },
                        this.options.placemark.options || {
                            preset: 'islands#blueBusinessIcon',
                            iconColor: '#0056b3'
                        }
                    );

                    this.map.geoObjects.add(placemark);

                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–ª—É–Ω
                    setTimeout(() => {
                        try {
                            placemark.balloon.open();
                        } catch (e) {
                            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±–∞–ª—É–Ω:', e);
                        }
                    }, 2000);
                }

                // –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô
                this.map.events.add('load', () => {
                    console.log('‚úÖ –ö–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
                    this.onMapLoaded();
                });

                this.map.events.add('error', (error) => {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –∫–∞—Ä—Ç—ã:', error);
                    this.showFallback();
                });

                // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –†–ê–ó–ú–ï–†–û–í
                this.forceMapRedraw();

            });

        } catch (error) {
            console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
            this.showFallback();
        }
    }

    onMapLoaded() {
        // –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
        const loader = document.getElementById('map-loader');
        if (loader) {
            loader.style.display = 'none';
        }

        // –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
        this.forceMapRedraw();

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        setTimeout(() => this.forceMapRedraw(), 100);
        setTimeout(() => this.forceMapRedraw(), 500);
        setTimeout(() => this.forceMapRedraw(), 1000);
    }

    forceMapRedraw() {
        if (!this.map) return;

        try {
            // –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
            if (this.map.container && this.map.container.fitToViewport) {
                this.map.container.fitToViewport();
            }

            if (this.map.container && this.map.container.redraw) {
                this.map.container.redraw();
            }

            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ—Ñ–ª–æ—É
            const container = document.getElementById(this.containerId);
            if (container) {
                container.style.display = 'none';
                container.offsetHeight; // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π reflow
                container.style.display = 'block';
            }

            console.log('üîÑ –†–∞–∑–º–µ—Ä—ã –∫–∞—Ä—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã');

        } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã –∫–∞—Ä—Ç—ã:', e);
        }
    }

    showFallback() {
        console.log('üîÑ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º fallback...');

        const container = document.getElementById(this.containerId);
        const loader = document.getElementById('map-loader');

        if (!container) return;

        // –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç—É
        const staticMap = document.createElement('div');
        staticMap.innerHTML = `
            <div style="width: 100%; height: 400px; background: #f8f9fa; display: flex; align-items: center; justify-content: center; border-radius: 8px;">
                <div class="text-center">
                    <div style="font-size: 48px; color: #dc3545; margin-bottom: 16px;">üó∫Ô∏è</div>
                    <h5>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h5>
                    <p class="text-muted">–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞</p>
                    <img src="https://static-maps.yandex.ru/1.x/?ll=37.652714,55.863631&z=16&size=650,400&l=map&pt=37.652714,55.863631,pm2dbl"
                         alt="–§–µ–¥–µ—Ä–∞–ª—å–Ω–∞—è –ê—Ä–µ–Ω–¥–Ω–∞—è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞"
                         style="width: 100%; height: 300px; object-fit: cover; border-radius: 8px;">
                    <p class="mt-2">
                        <strong>–ê–¥—Ä–µ—Å:</strong> ${this.options.address || '—É–ª. –ò—Å–∫—Ä—ã, 31, –ú–æ—Å–∫–≤–∞'}<br>
                        <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${this.options.phone || '+7 (929) 533-32-06'}
                    </p>
                </div>
            </div>
        `;

        container.parentNode.replaceChild(staticMap, container);

        if (loader) {
            loader.style.display = 'none';
        }
    }

    destroy() {
        if (this.map) {
            this.map.destroy();
            this.map = null;
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
window.initYandexMap = function(containerId, options = {}) {
    return new YandexMapUniversal(containerId, options);
};
