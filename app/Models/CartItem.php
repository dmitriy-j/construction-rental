<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Support\Facades\DB;


class CartItem extends Model
{
    protected $fillable = [
        'cart_id',
        'rental_term_id',
        'period_count',
        'base_price',
        'fixed_lessor_price',
        'fixed_customer_price',
        'platform_fee',
        'start_date',
        'end_date',
        'rental_condition_id',
        'delivery_from_id',
        'delivery_to_id',
        'delivery_cost',
        'distance_km',
        'delivery_cost_calculated',
        'proposal_id',
        'rental_request_item_id',
        'is_proposal_item',
        'proposal_data',
    ];

    protected $casts = [
        'start_date' => 'datetime',
        'end_date' => 'datetime',
        'is_proposal_item' => 'boolean',
        'proposal_data' => 'array',
    ];

    public function cart(): BelongsTo
    {
        return $this->belongsTo(Cart::class);
    }

    public function rentalTerm(): BelongsTo
    {
        return $this->belongsTo(EquipmentRentalTerm::class, 'rental_term_id');
    }

    public function proposal(): BelongsTo
    {
        return $this->belongsTo(RentalRequestResponse::class, 'proposal_id');
    }

    public function rentalRequestItem(): BelongsTo
    {
        return $this->belongsTo(RentalRequestItem::class, 'rental_request_item_id');
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
     */
   public static function createFromProposal(RentalRequestResponse $proposal, Cart $cart): self
    {
        $equipment = $proposal->equipment;
        $rentalRequest = $proposal->rentalRequest;

        // üî• –ü–û–õ–£–ß–ê–ï–ú –£–°–õ–û–í–ò–Ø –ê–†–ï–ù–î–´ –ò–ó –ó–ê–Ø–í–ö–ò
        $rentalCondition = self::getRentalConditionForProposal($proposal, $rentalRequest);

        // üî• –†–ê–°–ß–ï–¢ –†–ê–ë–û–ß–ò–• –ß–ê–°–û–í –° –£–ß–ï–¢–û–ú –†–ï–ê–õ–¨–ù–´–• –£–°–õ–û–í–ò–ô
        $workingHours = self::calculateActualWorkingHours($rentalRequest, $rentalCondition);

        // üî• –ü–†–ò–û–†–ò–¢–ï–¢ 1: –ò—Å–ø–æ–ª—å–∑—É–µ–º price_breakdown –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
        $priceBreakdown = $proposal->price_breakdown;
        if (is_string($priceBreakdown)) {
            $priceBreakdown = json_decode($priceBreakdown, true);
        }

        $customerPricePerHour = null;
        $lessorPricePerHour = null;

        // üî• –ò–ó–í–õ–ï–ö–ê–ï–ú –î–ê–ù–ù–´–ï –û –î–û–°–¢–ê–í–ö–ï –ò–ó PRICE_BREAKDOWN
        $deliveryBreakdown = $priceBreakdown['delivery_breakdown'] ?? [];
        $hasDelivery = $deliveryBreakdown['delivery_required'] ?? false;
        $deliveryCost = $deliveryBreakdown['delivery_cost'] ?? 0;

        if (!empty($priceBreakdown) && is_array($priceBreakdown)) {
            // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
            if (isset($priceBreakdown['customer_price_per_unit'])) {
                $customerPricePerHour = $priceBreakdown['customer_price_per_unit'];
                $lessorPricePerHour = $priceBreakdown['lessor_price_per_unit'] ?? $customerPricePerHour - 100;
            }
            // –î–ª—è bulk-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
            elseif (isset($priceBreakdown['items']) && is_array($priceBreakdown['items'])) {
                foreach ($priceBreakdown['items'] as $item) {
                    if ($item['equipment_id'] == $proposal->equipment_id) {
                        $customerPricePerHour = $item['customer_price_per_unit'] ?? null;
                        $lessorPricePerHour = $item['lessor_price_per_unit'] ?? null;

                        // üî• –ò–ó–í–õ–ï–ö–ê–ï–ú –î–û–°–¢–ê–í–ö–£ –î–õ–Ø BULK-–ü–†–ï–î–õ–û–ñ–ï–ù–ò–ô
                        $deliveryBreakdown = $item['delivery_breakdown'] ?? [];
                        $hasDelivery = $deliveryBreakdown['delivery_required'] ?? false;
                        $deliveryCost = $deliveryBreakdown['delivery_cost'] ?? 0;
                        break;
                    }
                }
            }
        }

        // üî• –ü–†–ò–û–†–ò–¢–ï–¢ 2: –ï—Å–ª–∏ price_breakdown –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞—Å—á–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏
        if (!$customerPricePerHour || !$lessorPricePerHour) {
            \Log::warning('Price breakdown missing or incomplete for proposal', [
                'proposal_id' => $proposal->id,
                'price_breakdown' => $priceBreakdown
            ]);

            // –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ø–æ–∑–∏—Ü–∏—é –≤ –∑–∞—è–≤–∫–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è hourly_rate
            $requestItem = $rentalRequest->items->first(function ($item) use ($equipment) {
                return $item->category_id == $equipment->category_id;
            });

            if ($requestItem && $requestItem->hourly_rate > 0) {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º hourly_rate –∏–∑ –∑–∞—è–≤–∫–∏ –∫–∞–∫ –±–∞–∑–æ–≤—É—é —Ü–µ–Ω—É
                $customerPricePerHour = $requestItem->hourly_rate;
                $lessorPricePerHour = $customerPricePerHour - 100; // –ë–∞–∑–æ–≤–∞—è –Ω–∞—Ü–µ–Ω–∫–∞ 100 ‚ÇΩ
            } else {
                // üî• –†–ï–ó–ï–†–í–ù–´–ô –†–ê–°–ß–ï–¢: –î–µ–ª–∏–º –æ–±—â—É—é —Å—É–º–º—É –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤
                if ($proposal->proposed_price > 0 && $workingHours > 0 && $proposal->proposed_quantity > 0) {
                    $customerPricePerHour = $proposal->proposed_price / ($workingHours * $proposal->proposed_quantity);
                    $lessorPricePerHour = $customerPricePerHour - 100;
                } else {
                    // –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback
                    $customerPricePerHour = $rentalRequest->hourly_rate ?? 1000;
                    $lessorPricePerHour = $customerPricePerHour - 100;
                    \Log::warning('Using fallback price calculation', ['price' => $customerPricePerHour]);
                }
            }
        }

        // üî• –í–ê–õ–ò–î–ê–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ü–µ–Ω
        if ($customerPricePerHour <= 0 || $lessorPricePerHour <= 0) {
            throw new \Exception('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ü–µ–Ω—ã –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏: —Ü–µ–Ω–∞ –∑–∞ —á–∞—Å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π');
        }

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º platform_fee (–¥–æ—Ö–æ–¥ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)
        $platformFeePerHour = $customerPricePerHour - $lessorPricePerHour;
        $totalPlatformFee = $platformFeePerHour * $workingHours * ($proposal->proposed_quantity ?? 1);

        return self::create([
            'cart_id' => $cart->id,
            'rental_term_id' => $equipment->rentalTerms->first()->id,
            'proposal_id' => $proposal->id,
            'rental_request_item_id' => $proposal->rental_request_item_id,
            'rental_condition_id' => $rentalCondition->id, // üî• –¢–ï–ü–ï–†–¨ –°–û–•–†–ê–ù–Ø–ï–ú –£–°–õ–û–í–ò–Ø
            'is_proposal_item' => true,
            'period_count' => $workingHours,
            'base_price' => $customerPricePerHour,
            'fixed_customer_price' => $customerPricePerHour,
            'fixed_lessor_price' => $lessorPricePerHour,
            'platform_fee' => $platformFeePerHour,
            'start_date' => $rentalRequest->rental_period_start,
            'end_date' => $rentalRequest->rental_period_end,
            'delivery_cost' => $deliveryCost, // üî• –°–û–•–†–ê–ù–Ø–ï–ú –°–¢–û–ò–ú–û–°–¢–¨ –î–û–°–¢–ê–í–ö–ò
            'proposal_data' => [
                'original_proposal_price' => $proposal->proposed_price,
                'lessor_company_id' => $proposal->lessor->company_id,
                'equipment_title' => $equipment->title,
                'proposal_message' => $proposal->message,
                'total_working_hours' => $workingHours,
                'customer_price_per_hour' => $customerPricePerHour,
                'lessor_price_per_hour' => $lessorPricePerHour,
                'platform_fee_per_hour' => $platformFeePerHour,
                'total_platform_fee' => $totalPlatformFee,
                'price_breakdown_source' => empty($priceBreakdown) ? 'calculated' : 'from_proposal',
                'calculation_notes' => empty($priceBreakdown) ? '–¶–µ–Ω—ã —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ hourly_rate –∏–∑ –∑–∞—è–≤–∫–∏' : '–¶–µ–Ω—ã –≤–∑—è—Ç—ã –∏–∑ breakdown',
                // üî• –î–û–ë–ê–í–õ–Ø–ï–ú –î–ê–ù–ù–´–ï –û –î–û–°–¢–ê–í–ö–ï
                'delivery_breakdown' => $deliveryBreakdown,
                'has_delivery' => $hasDelivery,
                'delivery_cost' => $deliveryCost
            ],
        ]);
    }


    /**
     * üî• –ü–û–õ–£–ß–ï–ù–ò–ï –£–°–õ–û–í–ò–ô –ê–†–ï–ù–î–´ –î–õ–Ø –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø
     */
    private static function getRentalConditionForProposal(RentalRequestResponse $proposal, RentalRequest $rentalRequest)
    {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏ –∑–∞—è–≤–∫–∏
        if ($proposal->rental_request_item_id) {
            $requestItem = RentalRequestItem::find($proposal->rental_request_item_id);
            if ($requestItem && $requestItem->use_individual_conditions && !empty($requestItem->individual_conditions)) {
                return self::createRentalConditionFromIndividual($requestItem, $rentalRequest->user->company);
            }
        }

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–µ —É—Å–ª–æ–≤–∏—è –∑–∞—è–≤–∫–∏
        return self::createRentalConditionFromRequest($rentalRequest);
    }

    /**
     * üî• –°–û–ó–î–ê–ù–ò–ï –£–°–õ–û–í–ò–ô –ê–†–ï–ù–î–´ –ò–ó –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–• –£–°–õ–û–í–ò–ô
     */
    private static function createRentalConditionFromIndividual(RentalRequestItem $requestItem, Company $company)
    {
        $individualConditions = $requestItem->individual_conditions;

        return RentalCondition::firstOrCreate([
            'company_id' => $company->id,
            'shift_hours' => $individualConditions['shift_hours'] ?? 8,
            'shifts_per_day' => $individualConditions['shifts_per_day'] ?? 1,
            'transportation' => $individualConditions['transportation'] ?? 'lessor',
            'fuel_responsibility' => $individualConditions['fuel_responsibility'] ?? 'lessor',
            'extension_policy' => $individualConditions['extension_policy'] ?? 'allowed',
            'payment_type' => $individualConditions['payment_type'] ?? 'hourly',
            'delivery_location_id' => $requestItem->rentalRequest->location_id,
            'is_default' => false,
        ]);
    }

    /**
     * üî• –°–û–ó–î–ê–ù–ò–ï –£–°–õ–û–í–ò–ô –ê–†–ï–ù–î–´ –ò–ó –û–ë–©–ò–• –£–°–õ–û–í–ò–ô –ó–ê–Ø–í–ö–ò
     */
    private static function createRentalConditionFromRequest(RentalRequest $rentalRequest)
    {
        $rentalConditions = $rentalRequest->rental_conditions ?? [];

        return RentalCondition::firstOrCreate([
            'company_id' => $rentalRequest->user->company_id,
            'shift_hours' => $rentalConditions['hours_per_shift'] ?? 8,
            'shifts_per_day' => $rentalConditions['shifts_per_day'] ?? 1,
            'transportation' => $rentalConditions['transportation_organized_by'] ?? 'lessor',
            'fuel_responsibility' => $rentalConditions['fuel_responsibility'] ?? 'lessor',
            'extension_policy' => $rentalConditions['extension_possibility'] ? 'allowed' : 'not_allowed',
            'payment_type' => $rentalConditions['payment_type'] ?? 'hourly',
            'delivery_location_id' => $rentalRequest->location_id,
            'is_default' => false,
        ]);
    }

    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
    public function getTotalAttribute(): float
    {
        return ($this->base_price + $this->platform_fee) * $this->period_count;
    }

    public function rentalCondition()
    {
        return $this->belongsTo(RentalCondition::class);
    }

    public function deliveryFrom(): BelongsTo
    {
        return $this->belongsTo(Location::class, 'delivery_from_id');
    }

    public function deliveryTo(): BelongsTo
    {
        return $this->belongsTo(Location::class, 'delivery_to_id');
    }
}
