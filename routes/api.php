<?php

// use App\Http\Controllers\Admin\NewsController;
use App\Http\Controllers\DeliveryController;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route; // –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
use App\Http\Controllers\API\LocationController;
use App\Http\Controllers\API\PublicProposalController;
use App\Http\Controllers\API\PublicRentalRequestController;
use App\Http\Controllers\API\ProposalCartController;

Route::middleware('auth:sanctum')->get('/user', function (Request $request) {
    return $request->user()->load('company');
});

// –ü—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
Route::prefix('public')->group(function () {
    Route::get('/rental-requests', [PublicRentalRequestController::class, 'index'])
        ->name('api.public.rental-requests.index');

    Route::get('/rental-requests/{id}', [PublicRentalRequestController::class, 'show'])
        ->name('api.public.rental-requests.show');
});

// –î–æ—Å—Ç–∞–≤–∫–∞
Route::prefix('delivery')->group(function () {
    Route::post('/calculate', [DeliveryController::class, 'calculate']);
    Route::get('/locations', [DeliveryController::class, 'getLocations']);
});

// –≠—Ç–æ—Ç –º–∞—Ä—à—Ä—É—Ç –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É –¥–ª—è –∑–∞—è–≤–∫–∏
Route::get('/rental-requests/{rentalRequest}/available-equipment', [PublicProposalController::class, 'getAvailableEquipment'])
    ->middleware(['auth:sanctum', 'company.verified'])
    ->name('api.public.rental-requests.available-equipment');

// –≠—Ç–æ—Ç –º–∞—Ä—à—Ä—É—Ç –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
Route::post('/rental-requests/{rentalRequest}/proposals', [PublicProposalController::class, 'store'])
    ->middleware(['auth:sanctum', 'company.verified'])
    ->name('api.public.rental-requests.proposals.store');

// –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤/—Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤)
/*Route::middleware(['auth:sanctum', 'role:admin|editor'])->group(function () {
    Route::post('/news', [NewsController::class, 'store']);
    Route::put('/news/{news}', [NewsController::class, 'update']);
    Route::delete('/news/{news}', [NewsController::class, 'destroy']);
});*/

// –î–æ–∫—É–º–µ–Ω—Ç—ã
/*Route::prefix('documents')->group(function () {
    Route::post('orders/{order}/delivery-notes', [DocumentController::class, 'createDeliveryNote']);
    Route::post('orders/{order}/waybills', [DocumentController::class, 'createWaybill']);
    Route::post('orders/{order}/completion-act', [DocumentController::class, 'generateCompletionAct']);
});*/

// –§–∏–Ω–∞–Ω—Å—ã
/*Route::prefix('finance')->middleware('auth:api')->group(function () {
    Route::get('/balance', [API\FinanceController::class, 'balance']);
    Route::get('/transactions', [API\FinanceController::class, 'transactions']);
    Route::get('/invoices', [API\FinanceController::class, 'invoices']);
    Route::get('/reconciliation-acts', [API\FinanceController::class, 'reconciliationActs']);
});*/

Route::get('/debug/edit-test/{id}', function ($id) {
    \Log::info('API Debug Test', ['id' => $id, 'user' => auth()->user()]);

    return response()->json([
        'success' => true,
        'message' => 'API —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω',
        'data' => [
            'request_id' => $id,
            'user_id' => auth()->id(),
            'user_email' => auth()->user()->email,
            'timestamp' => now()
        ]
    ]);
})->middleware('auth:sanctum');

Route::middleware(['auth:sanctum'])->prefix('lessee')->group(function () {
    // –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
    Route::get('/rental-requests', [\App\Http\Controllers\API\RentalRequestController::class, 'index']);

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –î–û –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    Route::get('/debug/edit-test/{id}', function ($id) {
        \Log::info('API Debug Test', [
            'id' => $id,
            'user_id' => auth()->id(),
            'user_email' => auth()->user()->email
        ]);

        return response()->json([
            'success' => true,
            'message' => 'API —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω',
            'data' => [
                'request_id' => $id,
                'user_id' => auth()->id(),
                'user_email' => auth()->user()->email,
                'timestamp' => now()->toDateTimeString()
            ]
        ]);
    });

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞—è–≤–∫–∏
    Route::get('/rental-requests/{id}', [\App\Http\Controllers\API\RentalRequestController::class, 'show']);

    // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
    Route::post('/rental-requests', [\App\Http\Controllers\API\RentalRequestController::class, 'store']);

    // –ù–û–í–´–ô –º–∞—Ä—à—Ä—É—Ç –¥–ª—è Vue-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    Route::get('/rental-requests/{id}/show', [\App\Http\Controllers\API\RentalRequestController::class, 'showForVue']);

    // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    Route::get('/categories/{categoryId}/specifications',
        [\App\Http\Controllers\API\SpecificationController::class, 'getTemplate']);

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    Route::post('/specifications/validate',
        [\App\Http\Controllers\API\SpecificationController::class, 'validateSpecifications']);

    Route::put('/rental-requests/{id}', [\App\Http\Controllers\API\RentalRequestController::class, 'update']);

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∑–∞—è–≤–∫–∞–º–∏
    Route::post('/rental-requests/{id}/pause', [\App\Http\Controllers\API\RentalRequestController::class, 'pause']);
    Route::post('/rental-requests/{id}/resume', [\App\Http\Controllers\API\RentalRequestController::class, 'resume']); // –î–û–ë–ê–í–ò–¢–¨
    Route::post('/rental-requests/{id}/cancel', [\App\Http\Controllers\API\RentalRequestController::class, 'cancel']);
    Route::post('/rental-requests/{request}/proposals/{proposal}/accept', [\App\Http\Controllers\API\RentalRequestController::class, 'acceptProposal']);
    Route::post('/rental-requests/{request}/proposals/{proposal}/reject', [\App\Http\Controllers\API\RentalRequestController::class, 'rejectProposal']);

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    Route::get('/rental-requests/stats', [\App\Http\Controllers\API\RentalRequestController::class, 'stats']);
});

// –ü—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
Route::prefix('public')->group(function () {
    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—É
    Route::get('/rental-requests', [PublicRentalRequestController::class, 'index']);
    Route::get('/rental-requests/{id}', [PublicRentalRequestController::class, 'show']);
});

// –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª–µ–π
Route::middleware(['auth:sanctum', 'company.verified'])->group(function () {
    // ========== –ú–ê–†–®–†–£–¢–´ –î–õ–Ø –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ô ==========

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ –¥–ª—è –∑–∞—è–≤–∫–∏
    Route::get('/rental-requests/{rentalRequest}/available-equipment',
        [PublicProposalController::class, 'getAvailableEquipment'])
        ->name('api.public.rental-requests.available-equipment');

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –∏–ª–∏ bulk)
    Route::post('/rental-requests/{rentalRequest}/proposals',
        [PublicProposalController::class, 'store'])
        ->name('api.public.rental-requests.proposals.store');

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π bulk-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    Route::get('/proposals/{proposal}/bulk',
        [PublicProposalController::class, 'getBulkProposal'])
        ->name('api.public.proposals.bulk');

    // –ü—Ä–∏–Ω—è—Ç–∏–µ bulk-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    Route::post('/proposals/{proposal}/accept-bulk',
        [PublicProposalController::class, 'acceptBulkProposal'])
        ->name('api.public.proposals.accept-bulk');

    // ========== –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –ú–ê–†–®–†–£–¢–´ ==========

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è –∑–∞—è–≤–∫–∏
    Route::post('/lessor/equipment/available-for-request',
        [\App\Http\Controllers\API\LessorEquipmentController::class, 'getAvailableForRequest']);
});

// –ù–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
Route::middleware(['auth:sanctum'])->group(function () {
    // API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω–æ–π –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    Route::prefix('cart')->group(function () {
        Route::get('/proposal', [ProposalCartController::class, 'getProposalCart']);
        Route::post('/proposal/add', [ProposalCartController::class, 'addToCart']);
        Route::post('/proposal/extend-reservation', [ProposalCartController::class, 'extendReservation']);
        Route::get('/request-progress/{requestId}', [ProposalCartController::class, 'getRequestProgress']);

        // üî• –î–û–ë–ê–í–ò–¢–¨: –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã
        Route::delete('/items/{itemId}', [ProposalCartController::class, 'removeItem']);
        Route::post('/remove-selected', [ProposalCartController::class, 'removeSelected']);

        // üî• –ù–û–í–´–ï –ú–ê–†–®–†–£–¢–´ –î–õ–Ø –û–§–û–†–ú–õ–ï–ù–ò–Ø –ó–ê–ö–ê–ó–ê
        Route::post('/proposal/checkout-selected', [ProposalCartController::class, 'checkoutSelected']);
        Route::post('/proposal/direct-checkout-selected', [ProposalCartController::class, 'directCheckoutSelected']);
        Route::post('/proposal/simple-checkout-selected', [ProposalCartController::class, 'simpleCheckoutSelected']);

        // üî• –ú–ê–†–®–†–£–¢ –î–õ–Ø –ú–ê–°–°–û–í–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø
        Route::delete('/remove-selected-items', [ProposalCartController::class, 'removeSelectedItems']);
        Route::post('proposal/update-rental-period', [ProposalCartController::class, 'updateRentalPeriod']);
        Route::post('proposal/test-api', [ProposalCartController::class, 'testApi']);
    });
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
Route::post('/rental-requests/{id}/calculate-delivery', [PublicProposalController::class, 'calculateDelivery'])
    ->middleware(['auth:sanctum', 'company.verified']);
Route::post('/proposal-cart/checkout', [ProposalCartController::class, 'checkoutSelected'])
    ->middleware(['auth:sanctum']);
